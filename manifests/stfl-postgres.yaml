apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  serviceName: postgres
  replicas: 3
  template:
    metadata:
      labels:
        app: postgres
    spec:
      initContainers:
      - name: init-permission
        image: busybox:1.36.1
        command:
        - chown
        - -R
        - "70"
        - /var/data/
        - /archives/
        volumeMounts:
        - name: pgdata
          mountPath: /var/data/
        - name: archives
          mountPath: /archives/
      - name: init-postgres
        image: postgres:15.5-alpine
        securityContext:
          runAsUser: 70
        envFrom:
        - configMapRef:
            name: pgenv
        command:
         - bash
         - "-c"
         - |
           set -ex
           # サーバがPrimaryかReplicaか判別する
           [[ $HOSTNAME =~ -([0-9]+)$ ]] || exit 1
           ordinal=${BASH_REMATCH[1]}
           ################################################################################
           # Primaryサーバでデータが存在しない場合データベースを初期化する
           ## 1. initdbでpostgresクラスタをセットアップする
           ## 2. postgresql.confとpg_hba.confをコピーする
           ## 3. 初期化を終了しexitする
           ################################################################################
           [[ -z $(ls -A $PGDATA) ]] && [[ ${ordinal} -eq 0 ]] &&\
           initdb -U $POSTGRES_USER --pwfile=<(printf "%s\n" "$POSTGRES_PASSWORD") &&\
           cp /mnt/config-map/postgresql.conf ${PGDATA} &&\
           cp /mnt/config-map/pg_hba.conf ${PGDATA}
           [[ ${ordinal} -eq 0 ]] && exit 0
           ################################################################################
           # Secondary固有の設定
           ## 1. Primaryのバックアップから復元
           ## 2.lpostgresql.confにSecondary固有設定を追加
           ################################################################################
           [[ -n $(ls -A $PGDATA) ]] && exit 0
           pg_basebackup -D /var/lib/postgresql/data/ -h postgres-0.postgres -p 5432 -U postgres -Xs -R -P
           ## postgresql.confにSecondary固有設定を追加
           # echo "restore_command = 'rsync -a /archives/%f %p'" >> $PGDATA/postgresql.conf
           echo "restore_command = 'cp /archives/%f %p'" >> $PGDATA/postgresql.conf
           echo "recovery_target_timeline = 'latest'" >> $PGDATA/postgresql.conf
        volumeMounts:
        - name: postgresql-volume
          mountPath: /mnt/config-map/
          readOnly: true
        - name: pgdata
          mountPath: /var/lib/postgresql/data/
      volumes:
      - name: postgresql-volume
        configMap:
          name: postgres
          items:
          - key: postgresql.conf
            path: postgresql.conf
          - key: pg_hba.conf
            path: pg_hba.conf
      containers:
      - name: postgres
        image: postgres:15.5-alpine
        securityContext:
          runAsUser: 70
        envFrom:
        - configMapRef:
            name: pgenv
        ports:
        - name: postgres
          containerPort: 5432
        volumeMounts:
        - name: postgresql-volume
          mountPath: /mnt/config-map/
          readOnly: true
        - name: pgdata
          mountPath: /var/lib/postgresql/data/
        - name: archives
          mountPath: /archives/
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
        livenessProbe:
          exec:
            command: ["pg_isready"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command: ["psql", "-h", "127.0.0.1", "-U", "postgres",  "-c", "SELECT 1" ]
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 1
      volumes:
      - name: postgresql-volume
        configMap:
          name: postgres
          items:
          - key: postgresql.conf
            path: postgresql.conf
          - key: pg_hba.conf
            path: pg_hba.conf
      - name: archives
        persistentVolumeClaim:
          claimName: archives
  volumeClaimTemplates:
  - metadata:
      name: pgdata
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
#  - metadata:
#      name: archives
#    spec:
#      accessModes: ["ReadWriteOnce"]
#      resources:
#        requests:
#          storage: 1Gi
